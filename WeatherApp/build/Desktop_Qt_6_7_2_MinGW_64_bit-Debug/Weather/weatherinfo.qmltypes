import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "appmodel.h"
        name: "AppModel"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["Weather/AppModel 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "ready"
            type: "bool"
            read: "ready"
            notify: "readyChanged"
            index: 0
            isReadonly: true
        }
        Property {
            name: "hasSource"
            type: "bool"
            read: "hasSource"
            notify: "readyChanged"
            index: 1
            isReadonly: true
        }
        Property {
            name: "hasValidCity"
            type: "bool"
            read: "hasValidCity"
            notify: "cityChanged"
            index: 2
            isReadonly: true
        }
        Property {
            name: "hasValidWeather"
            type: "bool"
            read: "hasValidWeather"
            notify: "weatherChanged"
            index: 3
            isReadonly: true
        }
        Property {
            name: "useGps"
            type: "bool"
            read: "useGps"
            write: "setUseGps"
            notify: "useGpsChanged"
            index: 4
        }
        Property {
            name: "city"
            type: "QString"
            read: "city"
            write: "setCity"
            notify: "cityChanged"
            index: 5
        }
        Property {
            name: "weather"
            type: "WeatherData"
            isPointer: true
            read: "weather"
            notify: "weatherChanged"
            index: 6
            isReadonly: true
        }
        Property {
            name: "forecast"
            type: "WeatherData"
            isList: true
            read: "forecast"
            notify: "weatherChanged"
            index: 7
            isReadonly: true
        }
        Signal { name: "readyChanged" }
        Signal { name: "useGpsChanged" }
        Signal { name: "cityChanged" }
        Signal { name: "weatherChanged" }
        Method { name: "refreshWeather" }
        Method {
            name: "positionUpdated"
            Parameter { name: "gpsPos"; type: "QGeoPositionInfo" }
        }
        Method {
            name: "positionError"
            Parameter { name: "e"; type: "QGeoPositionInfoSource::Error" }
        }
        Method {
            name: "handleWeatherData"
            Parameter { name: "location"; type: "LocationInfo" }
            Parameter { name: "weatherDetails"; type: "WeatherInfo"; isList: true }
        }
        Method { name: "switchToNextBackend" }
    }
    Component {
        file: "appmodel.h"
        name: "WeatherData"
        accessSemantics: "reference"
        prototype: "QObject"
        Property {
            name: "dayOfWeek"
            type: "QString"
            read: "dayOfWeek"
            write: "setDayOfWeek"
            notify: "dataChanged"
            index: 0
        }
        Property {
            name: "weatherIcon"
            type: "QString"
            read: "weatherIcon"
            write: "setWeatherIcon"
            notify: "dataChanged"
            index: 1
        }
        Property {
            name: "weatherDescription"
            type: "QString"
            read: "weatherDescription"
            write: "setWeatherDescription"
            notify: "dataChanged"
            index: 2
        }
        Property {
            name: "temperature"
            type: "QString"
            read: "temperature"
            write: "setTemperature"
            notify: "dataChanged"
            index: 3
        }
        Signal { name: "dataChanged" }
    }
}
